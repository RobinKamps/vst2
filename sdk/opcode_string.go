// Code generated by "stringer -type=EffectOpcode,HostOpcode -output=opcode_string.go"; DO NOT EDIT.

package sdk

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EffOpen-0]
	_ = x[EffClose-1]
	_ = x[EffSetProgram-2]
	_ = x[EffGetProgram-3]
	_ = x[EffSetProgramName-4]
	_ = x[EffGetProgramName-5]
	_ = x[EffGetParamLabel-6]
	_ = x[EffGetParamDisplay-7]
	_ = x[EffGetParamName-8]
	_ = x[effGetVu-9]
	_ = x[EffSetSampleRate-10]
	_ = x[EffSetBufferSize-11]
	_ = x[EffStateChanged-12]
	_ = x[EffEditGetRect-13]
	_ = x[EffEditOpen-14]
	_ = x[EffEditClose-15]
	_ = x[effEditDraw-16]
	_ = x[effEditMouse-17]
	_ = x[effEditKey-18]
	_ = x[EffEditIdle-19]
	_ = x[effEditTop-20]
	_ = x[effEditSleep-21]
	_ = x[effIdentify-22]
	_ = x[EffGetChunk-23]
	_ = x[EffSetChunk-24]
	_ = x[EffProcessEvents-25]
	_ = x[EffCanBeAutomated-26]
	_ = x[EffString2Parameter-27]
	_ = x[effGetNumProgramCategories-28]
	_ = x[EffGetProgramNameIndexed-29]
	_ = x[effCopyProgram-30]
	_ = x[effConnectInput-31]
	_ = x[effConnectOutput-32]
	_ = x[EffGetInputProperties-33]
	_ = x[EffGetOutputProperties-34]
	_ = x[EffGetPlugCategory-35]
	_ = x[effGetCurrentPosition-36]
	_ = x[effGetDestinationBuffer-37]
	_ = x[EffOfflineNotify-38]
	_ = x[EffOfflinePrepare-39]
	_ = x[EffOfflineRun-40]
	_ = x[EffProcessVarIo-41]
	_ = x[EffSetSpeakerArrangement-42]
	_ = x[effSetBlockSizeAndSampleRate-43]
	_ = x[EffSetBypass-44]
	_ = x[EffGetEffectName-45]
	_ = x[effGetErrorText-46]
	_ = x[EffGetVendorString-47]
	_ = x[EffGetProductString-48]
	_ = x[EffGetVendorVersion-49]
	_ = x[EffVendorSpecific-50]
	_ = x[EffCanDo-51]
	_ = x[EffGetTailSize-52]
	_ = x[effIdle-53]
	_ = x[effGetIcon-54]
	_ = x[effSetViewPosition-55]
	_ = x[EffGetParameterProperties-56]
	_ = x[effKeysRequired-57]
	_ = x[EffGetVstVersion-58]
	_ = x[EffEditKeyDown-59]
	_ = x[EffEditKeyUp-60]
	_ = x[EffSetEditKnobMode-61]
	_ = x[EffGetMidiProgramName-62]
	_ = x[EffGetCurrentMidiProgram-63]
	_ = x[EffGetMidiProgramCategory-64]
	_ = x[EffHasMidiProgramsChanged-65]
	_ = x[EffGetMidiKeyName-66]
	_ = x[EffBeginSetProgram-67]
	_ = x[EffEndSetProgram-68]
	_ = x[EffGetSpeakerArrangement-69]
	_ = x[EffShellGetNextPlugin-70]
	_ = x[EffStartProcess-71]
	_ = x[EffStopProcess-72]
	_ = x[EffSetTotalSampleToProcess-73]
	_ = x[EffSetPanLaw-74]
	_ = x[EffBeginLoadBank-75]
	_ = x[EffBeginLoadProgram-76]
	_ = x[EffSetProcessPrecision-77]
	_ = x[EffGetNumMidiInputChannels-78]
	_ = x[EffGetNumMidiOutputChannels-79]
}

const _EffectOpcode_name = "EffOpenEffCloseEffSetProgramEffGetProgramEffSetProgramNameEffGetProgramNameEffGetParamLabelEffGetParamDisplayEffGetParamNameeffGetVuEffSetSampleRateEffSetBufferSizeEffStateChangedEffEditGetRectEffEditOpenEffEditCloseeffEditDraweffEditMouseeffEditKeyEffEditIdleeffEditTopeffEditSleepeffIdentifyEffGetChunkEffSetChunkEffProcessEventsEffCanBeAutomatedEffString2ParametereffGetNumProgramCategoriesEffGetProgramNameIndexedeffCopyProgrameffConnectInputeffConnectOutputEffGetInputPropertiesEffGetOutputPropertiesEffGetPlugCategoryeffGetCurrentPositioneffGetDestinationBufferEffOfflineNotifyEffOfflinePrepareEffOfflineRunEffProcessVarIoEffSetSpeakerArrangementeffSetBlockSizeAndSampleRateEffSetBypassEffGetEffectNameeffGetErrorTextEffGetVendorStringEffGetProductStringEffGetVendorVersionEffVendorSpecificEffCanDoEffGetTailSizeeffIdleeffGetIconeffSetViewPositionEffGetParameterPropertieseffKeysRequiredEffGetVstVersionEffEditKeyDownEffEditKeyUpEffSetEditKnobModeEffGetMidiProgramNameEffGetCurrentMidiProgramEffGetMidiProgramCategoryEffHasMidiProgramsChangedEffGetMidiKeyNameEffBeginSetProgramEffEndSetProgramEffGetSpeakerArrangementEffShellGetNextPluginEffStartProcessEffStopProcessEffSetTotalSampleToProcessEffSetPanLawEffBeginLoadBankEffBeginLoadProgramEffSetProcessPrecisionEffGetNumMidiInputChannelsEffGetNumMidiOutputChannels"

var _EffectOpcode_index = [...]uint16{0, 7, 15, 28, 41, 58, 75, 91, 109, 124, 132, 148, 164, 179, 193, 204, 216, 227, 239, 249, 260, 270, 282, 293, 304, 315, 331, 348, 367, 393, 417, 431, 446, 462, 483, 505, 523, 544, 567, 583, 600, 613, 628, 652, 680, 692, 708, 723, 741, 760, 779, 796, 804, 818, 825, 835, 853, 878, 893, 909, 923, 935, 953, 974, 998, 1023, 1048, 1065, 1083, 1099, 1123, 1144, 1159, 1173, 1199, 1211, 1227, 1246, 1268, 1294, 1321}

func (i EffectOpcode) String() string {
	if i >= EffectOpcode(len(_EffectOpcode_index)-1) {
		return "EffectOpcode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _EffectOpcode_name[_EffectOpcode_index[i]:_EffectOpcode_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[hostAutomate-0]
	_ = x[HostVersion-1]
	_ = x[HostCurrentID-2]
	_ = x[HostIdle-3]
	_ = x[hostPinConnected-4]
	_ = x[hostWantMidi-6]
	_ = x[HostGetTime-7]
	_ = x[HostProcessEvents-8]
	_ = x[hostSetTime-9]
	_ = x[hostTempoAt-10]
	_ = x[hostGetNumAutomatableParameters-11]
	_ = x[hostGetParameterQuantization-12]
	_ = x[HostIOChanged-13]
	_ = x[hostNeedIdle-14]
	_ = x[HostSizeWindow-15]
	_ = x[HostGetSampleRate-16]
	_ = x[HostGetBlockSize-17]
	_ = x[HostGetInputLatency-18]
	_ = x[HostGetOutputLatency-19]
	_ = x[hostGetPreviousPlug-20]
	_ = x[hostGetNextPlug-21]
	_ = x[hostWillReplaceOrAccumulate-22]
	_ = x[HostGetCurrentProcessLevel-23]
	_ = x[HostGetAutomationState-24]
	_ = x[HostOfflineStart-25]
	_ = x[HostOfflineRead-26]
	_ = x[HostOfflineWrite-27]
	_ = x[HostOfflineGetCurrentPass-28]
	_ = x[HostOfflineGetCurrentMetaPass-29]
	_ = x[hostSetOutputSampleRate-30]
	_ = x[hostGetOutputSpeakerArrangement-31]
	_ = x[HostGetVendorString-32]
	_ = x[HostGetProductString-33]
	_ = x[HostGetVendorVersion-34]
	_ = x[HostVendorSpecific-35]
	_ = x[hostSetIcon-36]
	_ = x[HostCanDo-37]
	_ = x[HostGetLanguage-38]
	_ = x[hostOpenWindow-39]
	_ = x[hostCloseWindow-40]
	_ = x[HostGetDirectory-41]
	_ = x[HostUpdateDisplay-42]
	_ = x[HostBeginEdit-43]
	_ = x[HostEndEdit-44]
	_ = x[HostOpenFileSelector-45]
	_ = x[HostCloseFileSelector-46]
	_ = x[hostEditFile-47]
	_ = x[hostGetChunkFile-48]
	_ = x[hostGetInputSpeakerArrangement-49]
}

const (
	_HostOpcode_name_0 = "hostAutomateHostVersionHostCurrentIDHostIdlehostPinConnected"
	_HostOpcode_name_1 = "hostWantMidiHostGetTimeHostProcessEventshostSetTimehostTempoAthostGetNumAutomatableParametershostGetParameterQuantizationHostIOChangedhostNeedIdleHostSizeWindowHostGetSampleRateHostGetBlockSizeHostGetInputLatencyHostGetOutputLatencyhostGetPreviousPlughostGetNextPlughostWillReplaceOrAccumulateHostGetCurrentProcessLevelHostGetAutomationStateHostOfflineStartHostOfflineReadHostOfflineWriteHostOfflineGetCurrentPassHostOfflineGetCurrentMetaPasshostSetOutputSampleRatehostGetOutputSpeakerArrangementHostGetVendorStringHostGetProductStringHostGetVendorVersionHostVendorSpecifichostSetIconHostCanDoHostGetLanguagehostOpenWindowhostCloseWindowHostGetDirectoryHostUpdateDisplayHostBeginEditHostEndEditHostOpenFileSelectorHostCloseFileSelectorhostEditFilehostGetChunkFilehostGetInputSpeakerArrangement"
)

var (
	_HostOpcode_index_0 = [...]uint8{0, 12, 23, 36, 44, 60}
	_HostOpcode_index_1 = [...]uint16{0, 12, 23, 40, 51, 62, 93, 121, 134, 146, 160, 177, 193, 212, 232, 251, 266, 293, 319, 341, 357, 372, 388, 413, 442, 465, 496, 515, 535, 555, 573, 584, 593, 608, 622, 637, 653, 670, 683, 694, 714, 735, 747, 763, 793}
)

func (i HostOpcode) String() string {
	switch {
	case 0 <= i && i <= 4:
		return _HostOpcode_name_0[_HostOpcode_index_0[i]:_HostOpcode_index_0[i+1]]
	case 6 <= i && i <= 49:
		i -= 6
		return _HostOpcode_name_1[_HostOpcode_index_1[i]:_HostOpcode_index_1[i+1]]
	default:
		return "HostOpcode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
